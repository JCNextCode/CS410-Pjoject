208
Chapter 10
Web Search
do the same trick for the hub formula. Thus, although we framed the problem as
computing hubs and authorities, we can actually eliminate one of them to obtain
the equation for the other.
The difference between this and PageRank is that now the matrix is actually a
multiplication of the adjacency matrix and its transpose. Mathematically then, we
would be computing a very similar problem. In HITS, we would initialize the values
to one and apply the matrix equations ATA and AAT. We still need to normalize the
adjacency matrix after each iteration. This would allow us to control the growth of
the values; otherwise they would grow larger and larger.
To summarize, this section has shown that link information is very useful. In
particular, the anchor text is an important feature in the text representation of
a page. We also talked about the PageRank and HITS algorithms as two major
link analysis algorithms in web search. Both can generate scores for pages that
can be used in addition to standard IR ranking functions. PageRank and HITS
are very general algorithms with useful variants, so they have many applications
in analyzing other graphs or networks aside from the web.
10.4
Learning to Rank
In this section, we discuss using machine learning to combine many different fea-
tures into a single ranking function to optimize search results. Previously, we’ve
discussed a number of ways to rank documents. We talked about some retrieval
models like BM25 or query likelihood; these can generate a content-based score
for matching document text with a query. We also talked about the link-based ap-
proaches like PageRank that can give additional scores to help us improve ranking.
The question now is how can we combine all these features (and potentially many
other features) to do ranking? This will be very useful for ranking web pages not
only just to improve accuracy, but also to improve the robustness of the ranking
function so that’s it not easy for a spammer to just perturb one or a few features to
promote a page.
The general idea of learning to rank is to use machine learning to combine
these features, optimizing the weight on different features to generate the best
ranking function. We assume that given a query-document pair (q, d), we can
define a number of features. These features don’t necessarily have to be content-
based features. They could be a score of the document with respect to the query
according to a retrieval function such as BM25, query likelihood, pivoted length
normalization, PL2, etc. There also can be a link-based score like PageRank or
HITS, or an application of retrieval models to the anchor text of the page, which
