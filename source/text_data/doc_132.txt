112
Chapter 6
Retrieval Models
Query
Document
Relevant?
q
d
R
q1
d1
1
q1
d2
1
q1
d3
0
d1
d4
0
q1
d5
1
...
q1
d1
0
d1
d2
1
q1
d3
0
q2
d3
1
q3
d1
1
q4
d2
1
q4
d3
0
f (q, d) = p(R = 1 | d, q) = count(q, d, R = 1)
count(q, d)
P (R = 1 | q1, d1) = 1/2
P (R = 1 | q1, d2) = 2/2
P (R = 1 | q1, d3) = 0/2
Figure 6.19
Basic idea of probabilistic models for information retrieval.
we see q and d as a pair in this table and then count how many times we actually
have also seen a one in the third column and compute the ratio:
p(R = 1 | d, q) = count(R = 1, d, q)
count(d, q)
.
(6.3)
Clearly, p(R = 1 | d, q) + p(R = 0 | d, q) = 1.
Let’s take a look at some specific examples. Suppose we are trying to compute
this probability for d1, d2, and d3 for q1. What is the estimated probability? If we are
interested in q1 and d1, we consider the two pairs containing q1 and d1; only in one
of the two cases has the user said that the document is relevant. So R is equal to 1in
only one of the two cases, which gives our probability a value of 0.5. What about d2
and d3? For d2, R is equal to 1 in both cases. For d3, R is equal to 0 in both cases. We
now have a score for d1, d2, and d3 for q1. We can simply rank them based on these
probabilities—that’s the basic idea of probabilistic retrieval model. In our example,
