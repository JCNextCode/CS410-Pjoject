230
Chapter 11
Recommender Systems
Ratings
The task
• Assume known f values for some (u,o)’s
• Predict f values for other (u,o)’s
• Essentially function approximation,
like other learning problems
Objects: O
Xij = f(ui, oj) = ?
Unknown function
f: U × O → R  
Users: U
u1
o1
o2
on
oj
u2
…
3
1.5
2
?
…
…
…
3
2
1
…
um
ui
Figure 11.6
Collaborative filtering viewed as an m × n matrix with partially filled indices, repre-
senting user judgements.
collaborative filtering to infer the value of a element in this matrix based on other
known values.
One other assumption we have to make is that there are a sufficiently large
number of user preferences available to us. For example, we need an appreciable
number of ratings by users for movies that indicate their preferences for those
particular movies. If we don’t have sufficient data, there will be a data sparsity
problem and that’s often called the cold start problem.
We assume an unknown function f (., .), that maps a user and object to a rating.
In the matrix X, we have observed there are some output values of this function
and we want to infer the value of this function for other pairs that don’t have values.
This is very similar to other machine learning problems, where we would know the
values of the function on some training data and we hope to predict the values of
this function on some unseen test data. As usual, there are many approaches to
solving this problem. In fact, there is a major conference specifically dedicated to
this problem.
We will discuss what is called a memory-based approach. When we consider a
particular user, we’re going to try to retrieve the relevant (i.e., similar) users to the
current user. Then, we use those users to predict the preference of the current
user. Let ni be the average rating of all objects by user ui. We need ni so we can
normalize the ratings of objects by this user by subtracting the average rating from
all the ratings. This is necessary so that the ratings from different users will be
comparable; some users might be more generous and generally give higher ratings
