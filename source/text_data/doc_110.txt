90
Chapter 6
Retrieval Models
.
query likelihood [Ponte and Croft 1998]; and
.
PL2 [Amati and Van Rijsbergen 2002].
When optimized, these models tend to perform similarly as discussed in detail
in Fang et al. [2011]. Among all these, BM25 is probably the most popular. It’s most
likely that this has been used in virtually all search engine implementations, and it
is quite common to see this method discussed in research papers. We’ll talk more
about this method in a later section.
In summary, the main points are as follows. First, the design of a good ranking
function requires a computational definition of relevance, and we achieve this goal
by designing a proper retrieval model. Second, many models are equally effective
but we don’t have a single winner. Researchers are still actively working on this
problem, trying to find a truly optimal retrieval model. Finally, the state-of-the-art
ranking functions tend to rely on the following ideas: (1) bag of words representa-
tion; and (2) TF and the document frequency of words. Such information is used by
a ranking function to determine the overall contribution of matching a word, with
an adjustment for document length. These are often combined in interesting ways.
We’ll discuss how exactly they are combined to rank documents later in this book.
6.3
Vector Space Retrieval Models
The vector space (VS) retrieval model is a simple, yet effective method of designing
ranking functions for information retrieval. It is a special case of similarity-based
models that we discussed previously, where we assume relevance is roughly corre-
lated to similarity between a document and a query. Whether this assumption is
the best way to capture the notion of relevance formally remains an open question,
but in order to solve our search problem we have to convert the vague notion of
relevance into a more precise definition that can be implemented with a program-
ming language in one way or another. In this process we inevitably have to make
a number of assumptions. Here we assume that if a document is more similar to
a query than another document, then the first document would be assumed to be
more relevant than the second one. This is the basis for ranking documents in the
vector space model. This is not the only way to formalize relevance; we will see later
there are other ways to model relevance.
The basic idea of VS retrieval models is actually very easy to understand. Imagine
a high dimensional space, where each dimension corresponds to a term; we can
plot our documents in this space since they are represented as vectors of term
magnitudes.
