7.1 Feedback in the Vector Space Model
135
feedback and we can again use this information to update the query. This is a very
important technique used in modern search engines—think about how Google and
Bing can collect user activity to improve their search results.
To summarize, we talked about three types of feedback. In relevance feedback,
we use explicit relevance judgements, which require some user effort, but this
method is the most reliable. We talked about pseudo feedback, where we simply
assumed the top k document are relevant without involving the user at all. In
this case, we can actually do this automatically for each query before showing the
user the final results page. Lastly, we mentioned implicit feedback where we use
clickthrough data. While this method does involve users, the user doesn’t have to
make explicit effort to make judgements on the results.
Next, we will discuss how to apply feedback techniques to both the vector space
and query likelihood retrieval models. The future sections do not make any note of
how the feedback documents are obtained since no matter how they are obtained,
they would be dealt with the same way by each of the following two feedback
methods.
7.1
Feedback in the Vector Space Model
This section is about feedback in the vector space retrieval model. As we have
discussed, feedback in a TR system is based on learning from previous queries to
improve retrieval accuracy in future queries. We will have positive examples, which
are the documents that we assume to be relevant to a particular query, and we have
negative examples, which are non-relevant to a specific query. The way the system
gets these judged documents depends on the particular feedback strategy that is
employed (which was discussed in the previous section).
The general method in the vector space model for feedback is to modify our
query vector. We want to place the query vector in a better position in the high-
dimensional term space, plotting it closer to relevant documents. We might adjust
weights of old terms or assign weights to new terms in the query vector. As a result,
the query will usually have more terms, which is why this is often called query
expansion. The most effective method for the vector space model feedback was
proposed several decades ago and is called Rocchio feedback.
We illustrate this idea in Figure 7.2 by using a two-dimensional display of all the
documents in the collection in addition to the query vector q. The query vector is in
the center and the + (positive) or − (negative) represent documents. When we have
a query vector and use a similarity function to find the most similar documents, we
are drawing this dotted circle, denoting the top-ranked documents. Of course, not
