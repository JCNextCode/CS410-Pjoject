272
Chapter 13
Word Association Mining
Without loss of generality, assume we wish to evaluate syntagmatic association
mining. Given a word, the task may be to rank all other words in the vocabulary
according to how similar they are to the target word. Thus, we could compute
average precision for each word, and use MAP as a summary metric over each word
that we evaluate. Of course, if such ranked lists contained numerical relevance
scores we could instead use NDCG and average NDCG.
A human-based evaluation metric would be intrusion detection. In fact, this is
one measure described in the evaluation of topic models [Chang et al. 2009], which
we discuss further in Chapter 17. If the word associations are good, it should be
fairly easy to find an “intruder” that has been added into the top k similar words.
For example, consider the following two examples of intrusion detection presented
in Chang et al. [2009]. We have two lists with k + 1 = 6 items. The top k = 5 items
are chosen for some word in the vocabulary and an additional random word from
the vocabulary is also added.
L1 = {dog, cat, horse, apple, pig, cow},
L2 = {car, teacher, platypus, agile, blue, Zaire}
The idea here is that if it’s easy to spot the intruder, the top k words form a
coherent group, meaning that they are a very good word association group. In L1,
it’s quite obvious that apple is the intruder since it doesn’t fit in with the other
words in the list. Thus, the remaining words form a good word association list. In
L2, we can’t really tell which word is the intruder, meaning the word association
algorithm used to create the k candidates in L2 is not as good as the one used to
generate L1. Performing this type of experiment over many different words in the
vocabulary is a good (yet expensive) way to strictly evaluate the word associations.
We say this method is expensive since it requires many human judgements.
Finally, it’s important to consider the time-accuracy tradeoff of using such a tool
in word association mining. Imagine the scenario where we have a baseline system
with a MAP of 0.89 on some dataset. If we use query expansion via word association
mining, we can get a statistically significantly higher MAP of 0.90. However, this
doesn’t take into account the preprocessing time of mining the word associations.
In this example, the query time is not affected because the word association mining
takes place beforehand offline, but it still is a non-negligible cost. The application
manager would have to decide whether an increase in MAP of 0.01is worth the effort
of implementing, running, and maintaining the query expansion program. This is
actually quite a realistic and general issue whenever new technology is proposed to
replace or extend an existing one. As a data scientist, it is often part of the job to
